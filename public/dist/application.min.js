"use strict";var ApplicationConfiguration=function(){var applicationModuleName="youtubesw",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils","youtube-embed"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("clips"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("layout"),ApplicationConfiguration.registerModule("settings"),ApplicationConfiguration.registerModule("users"),angular.module("clips").run(["Menus",function(){}]),angular.module("clips").config(["$stateProvider",function($stateProvider){$stateProvider.state("listClips",{url:"/clips",templateUrl:"modules/clips/views/list-clips.client.view.html"}).state("createClip",{url:"/clips/create",templateUrl:"modules/clips/views/create-clip.client.view.html"}).state("viewClip",{url:"/clips/:clipId",templateUrl:"modules/clips/views/view-clip.client.view.html"}).state("editClip",{url:"/clips/:clipId/edit",templateUrl:"modules/clips/views/edit-clip.client.view.html"})}]),angular.module("clips").controller("ClipsController",["$scope","$stateParams","$location","Authentication","Clips",function($scope,$stateParams,$location,Authentication,Clips){$scope.authentication=Authentication,$scope.playerVars={controls:0},$scope.clip={},$scope.isLoggedIn=function(user){return!!user},$scope.create=function(){var clip=new Clips({text:this.clip.text,clipId:this.clip.clipId,start:this.clip.start,length:this.clip.length,"public":this.clip["public"]});clip.$save(function(){$location.path("clips"),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.editClip=function(clip){$location.path("clips/"+clip._id+"/edit")},$scope.remove=function(clip){if(clip){clip.$remove();for(var i in $scope.clips)$scope.clips[i]===clip&&$scope.clips.splice(i,1)}else $scope.clip.$remove(function(){$location.path("clips")})},$scope.update=function(){var clip=$scope.clip;clip.$update(function(){$location.path("clips")},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.clips=Clips.query()},$scope.findOne=function(){Clips.get({clipId:$stateParams.clipId}).$promise.then(function(clip){$scope.clip=clip},function(errorResponse){$scope.error=errorResponse.data.message})}}]),angular.module("clips").factory("Clips",["$resource",function($resource){return $resource("clips/:clipId",{clipId:"@_id"},{update:{method:"PUT"}})}]),angular.module("clips").service("ClipService",["Clips",function(Clips){return{getClips:function(){return Clips.query()},getSentencePatterns:function(clips){for(var clipsWords=[],i=0;i<clips.length;i++){var text=clips[i].text,textWords=text.split(" ");(0===i||textWords.length===clipsWords[0].length)&&clipsWords.push(textWords)}var uniqueWordsInEachPosition=[],result=[];for(i=0;i<clipsWords.length;i++)for(var clipWords=clipsWords[i],j=0;j<clipWords.length;j++){var uniqueWordsInPosition={};uniqueWordsInEachPosition.length<=j?(uniqueWordsInEachPosition.push(uniqueWordsInPosition),result.push([])):uniqueWordsInPosition=uniqueWordsInEachPosition[j],uniqueWordsInPosition[clipWords[j]]=!0}for(i=0;i<uniqueWordsInEachPosition.length;i++)for(var key in uniqueWordsInEachPosition[i])result[i].push(key);return result}}}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("clips",{url:"/clips",templateUrl:"modules/clips/views/list-clips.client.view.html"}).state("quiz",{url:"/quiz",templateUrl:"modules/core/views/quiz.client.view.html"}).state("explore",{url:"/explore",templateUrl:"modules/core/views/explore.client.view.html"}).state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("CreateController",["$scope","$stateParams","$location","Authentication","Clips",function($scope,$stateParams,$location,Authentication,Clips){$scope.authentication=Authentication,$scope.isLoggedIn=function(user){return!!user},$scope.playerVars={controls:0},$scope.create=function(){var clip=new Clips({text:this.text,clipId:this.clipId,start:this.start,length:this.length,"public":this["public"]});clip.$save(function(response){$location.path("create/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(clip){if(clip){clip.$remove();for(var i in $scope.clips)$scope.clips[i]===clip&&$scope.clips.splice(i,1)}else $scope.clip.$remove(function(){$location.path("create")})},$scope.edit=function(){},$scope.update=function(){var clip=$scope.clip;clip.$update(function(){$location.path("create/"+clip._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.clips=Clips.query()},$scope.findOne=function(){$scope.clip=Clips.get({clipId:$stateParams.clipId})}}]),angular.module("core").controller("ExploreController",["$scope","TTSService","ClipService",function($scope,TTSService,ClipService){$scope.showSentence=!1,$scope.currentClip=0,$scope.clip=null,$scope.init=function(){ClipService.getClips().$promise.then(function(clips){$scope.clips=clips,$scope.currentClip=-1,$scope.nextClip()},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.$on("youtube.player.paused",function(){$scope.showSentence=!0}),$scope.replay=function(){$scope.showSentence=!1,$scope.playing=!0;for(var i=0;i<$scope.sentenceOptions.length;i++)$scope.sentenceOptions[i].selectedWord=""},$scope.nextClip=function(){$scope.showSentence=!1,$scope.currentClip=($scope.currentClip+1)%$scope.clips.length;for(var clip=$scope.clips[$scope.currentClip],words=clip.text.split(" "),sentenceOptions=[],patterns=ClipService.getSentencePatterns($scope.clips),i=0;i<words.length;i++){var word={selectedWord:"",options:patterns[i]};sentenceOptions.push(word)}$scope.sentenceOptions=sentenceOptions},$scope.$watch("sentence",function(){var sentence=$scope.sentence;if(sentence)if(-1!=sentence.indexOf("  "))$scope.sentenceComplete=!1;else{$scope.sentenceComplete=!0;for(var i=0;i<$scope.clips.length;i++){var clip=$scope.clips[i];if(clip.text==sentence){$scope.clip=clip,$scope.playing=!0;break}}}}),$scope.init()}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").controller("QuizController",["$scope","TTSService","ClipService",function($scope,TTSService,ClipService){$scope.showSentence=!1,$scope.clips=ClipService.getClips(),$scope.currentClip=0,$scope.init=function(){ClipService.getClips().$promise.then(function(clips){$scope.clips=clips,$scope.currentClip=-1,$scope.nextClip()},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.$on("youtube.player.paused",function(){$scope.showSentence=!0}),$scope.replay=function(){$scope.showSentence=!1,$scope.playing=!0;for(var i=0;i<$scope.sentenceOptions.length;i++)$scope.sentenceOptions[i].selectedWord=""},$scope.nextClip=function(){$scope.showSentence=!1,$scope.currentClip=($scope.currentClip+1)%$scope.clips.length;for(var clip=$scope.clips[$scope.currentClip],words=clip.text.split(" "),sentenceOptions=[],patterns=ClipService.getSentencePatterns($scope.clips),i=0;i<words.length;i++){var word={selectedWord:"",options:patterns[i]};sentenceOptions.push(word)}$scope.sentenceOptions=sentenceOptions},$scope.$watch("sentence",function(){$scope.sentence&&$scope.clips.length>$scope.currentClip?($scope.sentenceComplete=-1==$scope.sentence.indexOf("  "),$scope.sentenceCorrect=$scope.sentence==$scope.clips[$scope.currentClip].text,$scope.sentenceComplete&&TTSService.speak($scope.sentence+($scope.sentenceCorrect?"!":"?"))):$scope.sentenceComplete=!1}),$scope.init()}]),angular.module("core").directive("sentenceBuilder",function(){return{restrict:"E",templateUrl:"modules/core/directives/sentence-builder.html",require:"ngModel",scope:{sentenceOptions:"="},link:function(scope,element,attrs,ngModel){scope.ngModel=ngModel,scope.getSelectedSentence=function(){var result="";if(scope.sentenceOptions)for(var i=0;i<scope.sentenceOptions.length;i++){i>0&&(result+=" ");var selectedWord=scope.sentenceOptions[i].selectedWord;0===selectedWord.length&&(selectedWord+=" "),result+=selectedWord}return result},scope.$watch("getSelectedSentence()",function(){var sentence=scope.getSelectedSentence();ngModel.$setViewValue(sentence)})}}}),angular.module("core").directive("television",["GeomUtils",function(GeomUtils){return{restrict:"E",controller:"TelevisionController",templateUrl:"modules/core/directives/television.html",scope:{videoClip:"=",playing:"="},link:function($scope,$element,$attrs,televisionController){function handleResize(){var tvWidth=$element.parent().width(),tvHeight=$element.parent().height(),newDim=tvWidth+","+tvHeight;if(newDim!==lastResizedDim){lastResizedDim=newDim;var bodyHeight=$("body").height();tvHeight=Math.min(tvHeight,bodyHeight-$element.offset().top),console.log("avail dim: ("+tvWidth+", "+tvHeight+")");var resizedTVBounds=GeomUtils.centerRectangleInRectangle(origTvWidth,origTvHeight,tvWidth,tvHeight);resizedTVBounds.left=Math.round(resizedTVBounds.left),resizedTVBounds.top=Math.round(resizedTVBounds.top),resizedTVBounds.width=Math.round(resizedTVBounds.width),resizedTVBounds.height=Math.round(resizedTVBounds.height),console.log("resizedTVBounds: ("+resizedTVBounds.width+", "+resizedTVBounds.height+")"),tv.css({left:resizedTVBounds.left+"px",top:resizedTVBounds.top+"px",width:resizedTVBounds.width+"px",height:resizedTVBounds.height+"px"});var scale=resizedTVBounds.height/origTvHeight;console.log("scale = "+scale+", resizedTVBounds.height = "+resizedTVBounds.height+", origTvHeight = "+origTvHeight),tvScreen.css({left:origScreenOffset.left*scale+"px",top:origScreenOffset.top*scale+"px",width:origScreenWidth*scale+"px",height:origScreenHeight*scale+"px"}),$scope.screen={width:tvScreen.width(),height:tvScreen.height()};var iframe=$element.find("iframe");iframe.css("width",$scope.screen.width+"px"),iframe.css("height",$scope.screen.height+"px"),iframe.attr("width",$scope.screen.width),iframe.attr("height",$scope.screen.height),$scope.screen.width>0&&tv.css("display","block")}}function checkResize(){handleResize(),window.setTimeout(checkResize,1)}$scope.screen={width:0,height:0},televisionController.init($element);var tv=$element.find(".tv"),origTvWidth=parseFloat(tv.css("width")),origTvHeight=parseFloat(tv.css("height")),tvScreen=$element.find(".tv-screen"),origScreenOffset={left:parseFloat(tvScreen.css("left")),top:parseFloat(tvScreen.css("top"))},origScreenWidth=tvScreen.width(),origScreenHeight=tvScreen.height(),lastResizedDim=($element.find("youtube-video"),"");checkResize()}}}]).controller("TelevisionController",["$scope","$element","$attrs",function($scope,$element){this.init=function(element){$scope.element=element},$scope.playerVars={controls:0,showinfo:0,rel:0,autoplay:0},$scope.$on("youtube.player.playing",function($event,player){$scope.player=player;var clip=$scope.currentClip;window.setTimeout(function(){player.seekTo(clip.start+clip.length),player.pauseVideo(),$scope.$digest()},1e3*clip.length)}),$scope.$watch("videoClip",function(){var videoClip=$scope.videoClip;$scope.currentClip=videoClip,$scope.playerVars={controls:0,showinfo:0,rel:0,autoplay:1,loop:0,start:videoClip?videoClip.start:0}}),$scope.$watch("playing",function(){var isPlaying=$scope.playing;$scope.playing=!1,$scope.player&&isPlaying&&($scope.player.seekTo($scope.currentClip.start),$scope.player.playVideo())})}]),angular.module("core").directive("wordChooser",function(){return{restrict:"E",controller:"wordChooserController",templateUrl:"modules/core/directives/word-chooser.html",require:"ngModel",scope:{word:"=ngModel"},link:function(scope,element,attrs,ngModel){scope.ngModel=ngModel,scope.$watch("word.options",function(){1===scope.word.options.length&&(scope.word.selectedWord=scope.word.options[0])})}}}).controller("wordChooserController",["$scope","$element","$attrs","$animate","TTSService",function($scope,$element,$attrs,$animate,TTSService){$scope.element=$element,$scope.selectWord=function(word){TTSService.speak(word),$scope.word.selectedWord=word;for(var options=$scope.word.options,i=0;i<options.length&&options[i]!==word;i++);var element=$scope.element,wordButtons=element.find(".word-button");if(i<wordButtons.length){var wordButton=wordButtons.eq(i),buttonOffset=wordButton.offset(),wordSelectionContainer=element.find(".word-selection-container"),buttonContainerAdj=(wordSelectionContainer.height()-wordButton.height())/2,buttonContainerOffset=wordSelectionContainer.parent().offset(),topOffset="+="+(buttonContainerOffset.top-buttonOffset.top+buttonContainerAdj);$(wordSelectionContainer).animate({top:topOffset},1e3,function(){})}}}]),angular.module("core").factory("GeomUtils",[function(){return{centerRectangleInRectangle:function(childWidth,childHeight,parentWidth,parentHeight,margin,minScaling,maxScaling){"undefined"==typeof margin?margin=0:(parentWidth-=margin+margin,parentHeight-=margin+margin);var scale,childAR=childWidth/childHeight,parentAR=parentWidth/parentHeight;scale=childAR>parentAR?parentWidth/childWidth:parentHeight/childHeight,"undefined"!=typeof minScaling&&(scale=Math.max(scale,minScaling)),"undefined"!=typeof maxScaling&&(scale=Math.min(scale,maxScaling));var result={};return result.width=childWidth*scale,result.height=childHeight*scale,result.left=margin+(parentWidth-result.width)/2,result.top=margin+(parentHeight-result.height)/2,result}}}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("core").factory("TTSService",[function(){return{speak:function(text){if("speechSynthesis"in window){var msg=new window.SpeechSynthesisUtterance(text);window.speechSynthesis.speak(msg)}}}}]),angular.module("layout").directive("expandToBottom",["$window",function(){return{restrict:"A",link:function(scope,element){function resizeElement(){var bodyHeight=$(window).innerHeight(),elementTop=element.offset().top,height=bodyHeight-elementTop;element.height(height),debug&&(console.log("bodyHeight = "+bodyHeight+", elementTop = "+elementTop),0==$("#test_expandToBottom1").length&&$("body").append('<div id="test_expandToBottom1" style="z-index:100;position:absolute;top:0px;width:20px;background-color:red;border-radius:20px"></div>   <div id="test_expandToBottom2" style="z-index:101;position:absolute;top:0px;width:20px;background-color:blue;border-radius:20px"></div>'),$("#test_expandToBottom1").height(elementTop),$("#test_expandToBottom2").height(height),$("#test_expandToBottom2").css("top",elementTop+"px"))}var debug=!1;scope.$watch(function(){return element.width()+"x"+element.height()+":"+element.offset().top},function(value){console.log("directive got resized:",value.split("x")),resizeElement()}),$(window).resize(resizeElement),resizeElement()}}}]),angular.module("settings").config(["$stateProvider",function($stateProvider){$stateProvider.state("listSettings",{url:"/settings",templateUrl:"modules/settings/views/list-settings.client.view.html"}).state("createSetting",{url:"/settings/create",templateUrl:"modules/settings/views/create-setting.client.view.html"}).state("viewSetting",{url:"/settings/:settingId",templateUrl:"modules/settings/views/view-setting.client.view.html"}).state("editSetting",{url:"/settings/:settingId/edit",templateUrl:"modules/settings/views/edit-setting.client.view.html"})}]),angular.module("settings").controller("SettingsController",["$scope","$stateParams","$location","Authentication","Settings",function($scope,$stateParams,$location,Authentication,Settings){$scope.authentication=Authentication,$scope.create=function(){var setting=new Settings({name:this.name});setting.$save(function(response){$location.path("settings/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(setting){if(setting){setting.$remove();for(var i in $scope.settings)$scope.settings[i]===setting&&$scope.settings.splice(i,1)}else $scope.setting.$remove(function(){$location.path("settings")})},$scope.update=function(){var setting=$scope.setting;setting.$update(function(){$location.path("settings/"+setting._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.settings=Settings.query()},$scope.findOne=function(){$scope.setting=Settings.get({settingId:$stateParams.settingId})}}]),angular.module("settings").factory("Settings",["$resource",function($resource){return $resource("settings/:settingId",{settingId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication;var redirectTo="/",search=$location.search();search&&search.hasOwnProperty("next")&&(redirectTo+=search.next),$scope.authentication.user&&$location.path(redirectTo),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.search({}),$location.path(redirectTo)}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.search({}),$location.path(redirectTo)}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);